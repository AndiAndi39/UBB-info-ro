     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1400                        a DW 20
    15 00000002 6400                        b DW 100
    16 00000004 0A00                        c DW 10
    17 00000006 0500                        d DW 5
    18 00000008 <res 00000002>              rezultat RESW 1
    19                                  ; our code starts here
    20                                  ; Sabo Andrei Claudiu
    21                                  ; a,b,c,d - word
    22                                  ; (b-a)-(c+c+d) 
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 66A1[02000000]                  mov AX,[b]
    27 00000006 662B05[00000000]                sub AX,[a]
    28 0000000D 662B05[04000000]                sub AX,[c]
    29 00000014 662B05[04000000]                sub AX,[c]
    30 0000001B 662B05[06000000]                sub AX,[d]
    31 00000022 66A3[08000000]                  mov [rezultat],AX
    32                                          ; exit(0)
    33 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
