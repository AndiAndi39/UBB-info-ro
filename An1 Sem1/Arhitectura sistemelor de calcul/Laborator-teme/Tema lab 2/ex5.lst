     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 14                          a DB 20
    15 00000001 0A                          b DB 10
    16 00000002 05                          c DB 5
    17 00000003 <res 00000002>              rezultat RESW 1
    18                                  ; our code starts here
    19                                  ; Sabo Andrei Claudiu
    20                                  ; a,b,c,d-byte, e,f,g,h-word
    21                                  ; (a+(b-c))*3
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 A0[00000000]                    mov AL,[a]
    26 00000005 0205[01000000]                  add AL,[b]
    27 0000000B 2A05[02000000]                  sub AL,[c]
    28 00000011 B303                            mov BL, 3
    29 00000013 F6E3                            mul BL
    30 00000015 66A3[03000000]                  mov [rezultat],AX
    31                                          ; exit(0)
    32 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
