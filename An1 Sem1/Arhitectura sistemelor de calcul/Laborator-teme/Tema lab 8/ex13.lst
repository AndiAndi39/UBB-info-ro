     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, printf, fprintf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19                                      
    20 00000000 746578742E74787400          nume_fisier db "text.txt", 0    ; numele fisierului
    21 00000009 FFFFFFFF                    descriptor dd -1
    22 0000000D 7200                        mod_acces db "r", 0
    23                                      
    24                                      len equ 100
    25 0000000F 00<rept>                    text times len db 0         ; variabila pentru textul din fisier
    26                                      
    27 00000073 74657874322E747874-         nume_fisier_scriere db "text2.txt" , 0  ;  numele fisierului de scriere a textului
    27 0000007C 00                 
    28 0000007D FFFFFFFF                    descriptor2 dd -1
    29 00000081 7700                        mod_acces2 db "w", 0
    30                                      
    31 00000083 257300                      format_afisare db "%s", 0   ; folosim pentru a verifica daca codul functioneaza
    32                                      
    33                                  ;Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, litere mari, cifre si caractere speciale. Sa se transforme toate literele mici din textul dat in litere mari. Sa se c
    34                                  ; our code starts here
    35                                  segment code use32 class=code
    36                                      start:
    37                                          ; ...
    38                                          
    39 00000000 68[0D000000]                    push dword mod_acces            ; Deschidem fisierul pentru a citi textul din el
    40 00000005 68[00000000]                    push dword nume_fisier
    41 0000000A FF15[00000000]                  call [fopen]
    42 00000010 83C408                          add esp, 4*2
    43                                          
    44 00000013 A3[09000000]                    mov [descriptor], eax           ; Salvam valoare din eax (descriptorul fisierului)
    45                                          
    46 00000018 83F800                          cmp eax, 0
    47 0000001B 0F848D000000                    je final
    48                                          
    49 00000021 FF35[09000000]                  push dword [descriptor]         ; Citim sirul din fisier, si memoram sirul in 'text'
    50 00000027 6A64                            push dword len
    51 00000029 6A01                            push dword 1
    52 0000002B 68[0F000000]                    push dword text
    53 00000030 FF15[00000000]                  call [fread]
    54 00000036 83C410                          add esp, 4*4
    55                                          
    56 00000039 FF35[09000000]                  push dword [descriptor]         ; Inchidem fisierul
    57 0000003F FF15[00000000]                  call [fclose]
    58 00000045 83C404                          add esp, 4*1
    59                                          
    60                                          ; push dword text                 ; Afisam textul pentru verificare
    61                                          ; push dword format_afisare
    62                                          ; call [printf]
    63                                          ; mov esp, 4*2
    64                                          
    65 00000048 B964000000                      mov ecx, len 
    66 0000004D BA00000000                      mov edx, 0
    67                                          parcurgere_caractere:           ; Facem un loop care parcurge toate caracterele din 'text'
    68                                          
    69 00000052 8A9A[0F000000]                      mov bl, [text+edx]
    70 00000058 80FB61                              cmp bl, 97
    71 0000005B 7C0E                                jl caracterul_nu_e_litera_mica
    72 0000005D 80FB7A                              cmp bl, 122
    73 00000060 7F09                                jg caracterul_nu_e_litera_mica
    74                                              
    75 00000062 80EB20                              sub bl, 32
    76 00000065 889A[0F000000]                      mov [text+edx], bl
    77                                              
    78                                              caracterul_nu_e_litera_mica:
    79 0000006B 42                                  inc edx
    80 0000006C E2E4                            loop parcurgere_caractere
    81                                          
    82                                          ; push dword text                 ; Afisam textul pentru verificare
    83                                          ; push dword format_afisare
    84                                          ; call [printf]
    85                                          ; mov esp, 4*2
    86                                          
    87 0000006E 68[81000000]                    push dword mod_acces2
    88 00000073 68[73000000]                    push dword nume_fisier_scriere
    89 00000078 FF15[00000000]                  call [fopen]
    90 0000007E 83C408                          add esp, 4*2
    91                                          
    92 00000081 A3[7D000000]                    mov [descriptor2], eax          ; Salvam valoarea din eax (descriptorul fisierului)
    93                                          
    94 00000086 83F800                          cmp eax, 0
    95 00000089 7423                            je final
    96                                          
    97 0000008B 68[0F000000]                    push dword text
    98 00000090 FF35[7D000000]                  push dword [descriptor2]
    99 00000096 FF15[00000000]                  call [fprintf]
   100 0000009C 83C408                          add esp, 4*2
   101                                          
   102 0000009F FF35[7D000000]                  push dword [descriptor2]
   103 000000A5 FF15[00000000]                  call [fclose]
   104 000000AB 83C404                          add esp, 4*1
   105                                          final:
   106                                          ; exit(0)
   107 000000AE 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   108 000000B0 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
